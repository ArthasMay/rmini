{"version":3,"file":"index.js","sources":["../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/decorators.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../lib/components/scroll-view.js","../lib/components/view.js","../lib/components/text.js","../lib/components/input.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign({}, element, { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign({}, element, { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options) => \n// Return value typed as any to prevent TypeScript from complaining that\n// standard decorator function signature does not match TypeScript decorator\n// signature\n// TODO(kschaaf): unclear why it was only failing on this decorator and not\n// the others\n((protoOrDescriptor, name) => (name !== undefined) ?\n    legacyEventOptions(options, protoOrDescriptor, name) :\n    standardEventOptions(options, protoOrDescriptor));\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","\nimport { LitElement, html, customElement, property, css, unsafeCSS } from 'lit-element';\n\n@customElement('rmini-scroll-view')\nclass ScrollView extends LitElement {\n  @property({ type: Boolean, attribute: 'scroll-x' }) _scrollX = false;\n  @property({ type: Boolean, attribute: 'scroll-y' }) _scrollY = false;\n  @property({ type: Number, attribute: 'upper-threshold' }) _upperThreshold = 50;\n  @property({ type: Number, attribute: 'lower-threshold' }) _lowerThreshold = 50;\n  @property({ type: Number, attribute: 'scroll-top' }) _scrollTop = 0;\n  @property({ type: Number, attribute: 'scroll-left' }) _scrollLeft = 0;\n  @property({ type: String, attribute: 'scroll-into-view' }) _scrollIntoView = '';\n  @property({ type: Boolean, attribute: 'scroll-with-animation' }) _scrollWithAnimation = false;\n  @property({ type: Boolean, attribute: 'enable-back-to-top' }) _enableBackToTop = false;\n  @property({ type: Boolean, attribute: 'enable-flex' }) _enableFlex = false;\n  @property({ type: Boolean, attribute: 'scroll-anchoring' }) _scrollAnchoring = false;\n\n  // \n  @property({ type: String, attribute: 'bindscrolltoupper' }) _bindscrolltoupper = '';\n  @property({ type: String, attribute: 'bindscrolltolower' }) _bindscrolltolower = '';\n  @property({ type: String, attribute: 'bindscroll' }) _bindscroll = '';\n\n  static get styles() {\n    return css`\n      :host {\n        position: absolute;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n      }\n    `\n  }\n\n  onScrollHandler(e) {\n    window.__vm.triggerEvent('scroll', this._bindscroll, e)\n\n    // TODO: 其他方法\n    // const target = e.target;\n    // const triggerTerminal = (currentPosition, presetPosition, eventName) => {\n    //   if (currentPosition !== presetPosition) { return; }\n    //   window.__vm.triggerEvent(eventName, this['_' + eventName], e)\n    // }\n\n    // if (this._scrollX) {\n    //   triggerTerminal(target.scrollLeft, this._upperThreshold, 'bindscrolltoupper')\n    //   triggerTerminal(target.scrollWidth - target.scrollLeft, this._lowerThreshold, 'bindscrolltolower')\n    // }\n    \n    // if (this._scrollY) {\n    //   console.log(\"TCL: ScrollView -> onScrollHandler -> target.scrollTop, this._upperThreshold\", target.scrollTop, this._upperThreshold)\n    //   triggerTerminal(target.scrollTop, this._upperThreshold, 'bindscrolltoupper')\n    //   triggerTerminal(target.scrollHeight - target.scrollTop, this._lowerThreshold, 'bindscrolltolower')\n    // }\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n    this.addEventListener('scroll', this.onScrollHandler)\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback()\n    this.removeEventListener('scroll', this.onScrollHandler)\n  }\n\n  render() {\n    return html`\n      <style>\n        :host {\n          overflow-x: ${unsafeCSS(this._scrollX ? 'scroll' : 'hidden')};\n          overflow-y: ${unsafeCSS(this._scrollY ? 'scroll' : 'hidden')};\n        }\n      </style>\n      <slot></slot>\n    `\n  }\n}\n\n","\nimport { LitElement, html, customElement, property, css, unsafeCSS } from 'lit-element';\n\n@customElement('rmini-view')\nclass ScrollView extends LitElement {\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n    `\n  }\n\n  render() {\n    return html`<slot></slot>`\n  }\n}\n\n","\nimport { LitElement, html, customElement, property, css, unsafeCSS } from 'lit-element';\n\n@customElement('rmini-text')\nclass ScrollView extends LitElement {\n\n  static get styles() {\n    return css`\n      :host {\n        display: inline;\n      }\n    `\n  }\n\n  render() {\n    return html`<slot></slot>`\n  }\n}\n\n","\nimport { LitElement, html, customElement, property, css, unsafeCSS } from 'lit-element';\n\n@customElement('rmini-input')\nclass ScrollView extends LitElement {\n  @property({ type: Boolean, attribute: 'type' }) _type = 'text';\n  @property({ type: Number, attribute: 'password' }) _password = false;\n  @property({ type: Number, attribute: 'placeholder' }) _placeholder = \"\";\n  @property({ type: String, attribute: 'value' }) _value = '';\n\n  // \n  @property({ type: String, attribute: 'bindinput' }) _bindinput = '';\n\n  static get styles() {\n    return css`\n        :host {\n          display: block;\n          position: relative;\n          height: 32px;\n          width: 50px;\n        }\n        input {\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          right: 0;\n          width: 100%;\n          height: 100%;\n        }\n      `\n  }\n\n  update(changedProperties) {\n    super.update(changedProperties);\n    if (changedProperties.has('_value')) {\n      this.shadowRoot.firstElementChild.value = this._value\n    }\n  }\n\n  handleInput(e) {\n    window.__vm.triggerEvent('scroll', this._bindinput, e)\n  }\n\n  render() {\n    return html`\n        <input class=\"input\" @input=\"${this.handleInput}\" />\n      `\n  }\n}\n\n"],"names":["directives","WeakMap","isDirective","o","has","isCEPolyfill","window","customElements","undefined","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","constructor","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","currentNode","pop","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","update","setValue","commit","_clone","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","getHTML","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","getTemplateElement","createElement","innerHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","_getValue","text","v","t","setAttribute","committer","directive","NodePart","__pendingValue","appendInto","startNode","appendChild","endNode","ref","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","instance","itemParts","itemPart","item","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","event","call","DefaultTemplateProcessor","prefix","defaultTemplateProcessor","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","render","firstChild","Object","assign","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","startIndex","insertNodeIntoTemplate","refNode","insertCount","walkerIndex","walkerNode","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","removeStylesFromLitTemplates","templates","styles","Set","from","querySelectorAll","add","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","condensedStyle","style","textContent","querySelector","nativeShadow","removes","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","litRender","delete","styleElement","_a","JSCompiler_renameProperty","prop","_obj","defaultConverter","toAttribute","Boolean","JSON","stringify","fromAttribute","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","superProperties","getPrototypeOf","k","createProperty","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_saveInstanceProperties","_v","_applyInstanceProperties","connectedCallback","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","ctor","attrValue","propName","shouldRequestUpdate","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","hasUpdated","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","legacyCustomElement","clazz","define","standardCustomElement","descriptor","kind","elements","finisher","customElement","classOrDescriptor","standardProperty","placement","initializer","legacyProperty","proto","property","protoOrDescriptor","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","styleSheet","_styleSheet","replaceSync","toString","unsafeCSS","textFromCSSResult","css","reduce","acc","idx","arrayFlat","flattenStyles","flat","Infinity","LitElement","_styles","_getUniqueStyles","userStyles","flatStyles","styleSet","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","ScopingShim","prepareAdoptedCssText","map","localName","adoptedStyleSheets","_needsShimAdoptedStyleSheets","templateResult","ScrollView","__vm","triggerEvent","_bindscroll","onScrollHandler","_scrollX","_scrollY","shadowRoot","firstElementChild","_value","_bindinput","handleInput"],"mappings":"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"}